#!/usr/bin/env Rscript

library(tdmsreader)
library(eodplotter)

suppressPackageStartupMessages(library('optparse'))
parser <- OptionParser()
parser <- add_option(parser, c('-f', '--file'), help='TDMS file input')
parser <- add_option(parser, c('-v', '--verbose'), default=F, type="logical", action="store_true", help='Print verbose output')
parser <- add_option(parser, c('-c', '--channel'), default="/'Untitled'/'Dev1/ai0'", help='Channel name')
parser <- add_option(parser, c('-n', '--number'), type="double", default=5, help='Peak finder threshold, sigma or voltage threshold')
parser <- add_option(parser, c('-d', '--direction'), default = "none", help='Direction, enter either positive/negative/none')
parser <- add_option(parser, c('-s', '--start'), default = 0, type="double", help="Start time")
parser <- add_option(parser, c('-e', '--end'), default = 0, type="double", help="End time")
parser <- add_option(parser, c('-r', '--remove'), default = 0, type="double", help="Amount to remove from start/end of recording")
parser <- add_option(parser, c('-w', '--window'), default = 3000, type="double", help="Window size for adaptive mean/sd calculation")

options = commandArgs(trailingOnly = TRUE)
opts = parse_args(parser, args = options)

if (is.null(opts$file)) {
    print_help(parser)
}

if (!file.exists(opts$file)) {
    stop('TDMS file not found')
}



p=peakFinder(opts$file, channel = opts$channel, threshold = opts$number, direction = opts$direction, remove = opts$remove, start = opts$start, end = opts$end, verbose = opts$verbose, winsize = opts$window)
write.csv(p, file=paste0(basename(opts$file),'.peaks.csv'), quote=F, row.names=F)


