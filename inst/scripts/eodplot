#!/usr/bin/env Rscript

library(tdmsreader)
library(eodplotter)
library(data.table)

suppressPackageStartupMessages(library('optparse'))
parser <- OptionParser()
parser <- add_option(parser, c('-f', '--file'), help='TDMS file input')
parser <- add_option(parser, c('-p', '--peak'), help='Peak file input')
parser <- add_option(parser, c('-v', '--verbose'), default=F, type="logical", action="store_true", help='Print verbose output')
parser <- add_option(parser, c('-c', '--channel'), default = "/'Untitled'/'Dev1/ai0'", help='Channel name')
parser <- add_option(parser, c('-w', '--window'), default = 0.005, type = 'double', help='Window size around peak value')
parser <- add_option(parser, c('-b', '--prebaseline'), default=F, type = 'logical', action="store_true", help='Pre-normalization baseline subtract')
parser <- add_option(parser, c('-d', '--postbaseline'), default=F, type = 'logical', action="store_true", help='Post-normalization baseline subtract')
parser <- add_option(parser, c('-n', '--normalize'), default=F, type = 'logical', action="store_true", help='Normalize waveform between 0-1 peak to peak height')
parser <- add_option(parser, c('-a', '--alpha'), default=0.05, type = 'double', help='Alpha channel for individual peaks')

options = commandArgs(trailingOnly = TRUE)
opts = parse_args(parser, args = options)

if (is.null(opts$file) || is.null(opts$peak)) {
    print_help(parser)
}

if (!file.exists(opts$file)) {
    stop(sprintf('TDMS file not found', opts$file))
}
if (!file.exists(opts$peak)) {
    stop(sprintf('Peak file not found: %s', opts$peak))
}

p = fread(opts$peak)
plotEod(opts$file, peaks = p, channel = opts$channel, window = opts$window, prebaseline = opts$prebaseline, postbaseline = opts$postbaseline, verbose = opts$verbose, alpha = opts$alpha, normalize = opts$normalize)
