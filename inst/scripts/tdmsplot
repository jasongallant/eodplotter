#!/usr/bin/env Rscript

library(tdmsreader)
suppressPackageStartupMessages(library("optparse"))
parser <- OptionParser()
parser <- add_option(parser, c("-f", "--file"), dest="tdms", help="TDMS file input")
parser <- add_option(parser, c("-v", "--verbose"), dest="verbose", help="Print verbose output")
parser <- add_option(parser, c("-c", "--channel"), help="Channel name")
parser <- add_option(parser, c("-s", "--start"), type="double", help="Start time")
parser <- add_option(parser, c("-e", "--end"), type="double", help="End time")
parser <- add_option(parser, c("-o", "--out"), dest="out", help="Output png")

options = commandArgs(trailingOnly = TRUE)
opts = parse_args(parser, args = options)

if (is.null(opts$tdms) || is.null(opts$out)) {
    stop('Usage: tdmsplot -f <file> -c <object> -o <output>')
}

if (!file.exists(opts$tdms)) {
    stop('File not found')
}
m = file(opts$tdms, 'rb')
main = TdmsFile$new(m)



c = ifelse(is.null(opts$channel), "/'Untitled'/'Dev1/ai0'", opts$channel)
r = main$objects[[c]]
if(is.null(r)) {
    stop('Channel not found')
}
max = r$number_values * r$properties[['wf_increment']]
e = ifelse(is.null(opts$end), max, opts$end)
s = ifelse(is.null(opts$start), 0, opts$start)

main$read_data(m, s, e)
t = r$time_track(start = s, end = e)
dat = r$data
close(m)
print(opts$out)
png(opts$out, width=2000,height=500)
if(e - s > 20) {
    dat = dat[seq(1, length(dat), by = 10)]
    t = t[seq(1, length(t), by = 10)]
    dat = dat[1:length(t)]
    plot(t, dat, type = 'l', xlab = 'time', ylab = 'volts')
} else if(e - s > 10) {
    dat = dat[seq(1, length(dat), by = 5)]
    t = t[seq(1, length(t), by = 5)]
    dat = dat[1:length(t)]
    plot(t, dat, type = 'l', xlab = 'time', ylab = 'volts')
} else {
    output$txt2 <- renderText('')
    plot(t, dat, type = 'l', xlab = 'time', ylab = 'volts')
}
title(opts$tdms)
dev.off()
